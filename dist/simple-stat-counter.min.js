(function(i){class s{constructor(t={}){const e={selector:".counting",root:null,rootMargin:"0px",threshold:.2,interval:30,incrementDivisor:50,container:null};this.options={...e,...t},this.elements=document.querySelectorAll(this.options.selector),this.observer=new IntersectionObserver(this.callback.bind(this),this.options),this.observeElements()}observeElements(){this.options.container?(this.container=document.querySelector(this.options.container),this.container&&this.observer.observe(this.container)):this.elements.forEach(t=>{this.observer.observe(t.parentElement)})}callback(t){t.forEach(e=>{e.isIntersecting&&(e.target.querySelectorAll(".counting").forEach(o=>{this.startCountAnimation(o)}),this.observer.unobserve(e.target))})}startCountAnimation(t){const e=parseInt(t.getAttribute("data-count"),10);let n=0;const o=Math.ceil(e/this.options.incrementDivisor),r=setInterval(()=>{n+=o,t.innerText=n,n>=e&&(t.innerText=e,clearInterval(r))},this.options.interval);t.style.opacity=1}}i.SimpleStatCounter=s})(typeof window<"u"?window:this);
